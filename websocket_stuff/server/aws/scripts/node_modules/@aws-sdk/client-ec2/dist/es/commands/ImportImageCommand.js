import { __extends } from "tslib";
import { ImportImageRequest, ImportImageResult } from "../models/models_4";
import { deserializeAws_ec2ImportImageCommand, serializeAws_ec2ImportImageCommand } from "../protocols/Aws_ec2";
import { getSerdePlugin } from "@aws-sdk/middleware-serde";
import { Command as $Command } from "@aws-sdk/smithy-client";
/**
 * <p>Import single or multi-volume disk images or EBS snapshots into an Amazon Machine Image (AMI).</p>
 *          <p>For more information, see <a href="https://docs.aws.amazon.com/vm-import/latest/userguide/vmimport-image-import.html">Importing a
 *    VM as an image using VM Import/Export</a> in the <i>VM Import/Export User Guide</i>.</p>
 */
var ImportImageCommand = /** @class */ (function (_super) {
    __extends(ImportImageCommand, _super);
    // Start section: command_properties
    // End section: command_properties
    function ImportImageCommand(input) {
        var _this = 
        // Start section: command_constructor
        _super.call(this) || this;
        _this.input = input;
        return _this;
        // End section: command_constructor
    }
    /**
     * @internal
     */
    ImportImageCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {
        this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));
        var stack = clientStack.concat(this.middlewareStack);
        var logger = configuration.logger;
        var clientName = "EC2Client";
        var commandName = "ImportImageCommand";
        var handlerExecutionContext = {
            logger: logger,
            clientName: clientName,
            commandName: commandName,
            inputFilterSensitiveLog: ImportImageRequest.filterSensitiveLog,
            outputFilterSensitiveLog: ImportImageResult.filterSensitiveLog,
        };
        var requestHandler = configuration.requestHandler;
        return stack.resolve(function (request) {
            return requestHandler.handle(request.request, options || {});
        }, handlerExecutionContext);
    };
    ImportImageCommand.prototype.serialize = function (input, context) {
        return serializeAws_ec2ImportImageCommand(input, context);
    };
    ImportImageCommand.prototype.deserialize = function (output, context) {
        return deserializeAws_ec2ImportImageCommand(output, context);
    };
    return ImportImageCommand;
}($Command));
export { ImportImageCommand };
//# sourceMappingURL=ImportImageCommand.js.map