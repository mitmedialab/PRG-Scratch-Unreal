import { EC2ClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../EC2Client";
import { RebootInstancesRequest } from "../models/models_4";
import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, MiddlewareStack, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer } from "@aws-sdk/types";
export interface RebootInstancesCommandInput extends RebootInstancesRequest {
}
export interface RebootInstancesCommandOutput extends __MetadataBearer {
}
/**
 * <p>Requests a reboot of the specified instances. This operation is asynchronous; it only
 *             queues a request to reboot the specified instances. The operation succeeds if the
 *             instances are valid and belong to you. Requests to reboot terminated instances are
 *             ignored.</p>
 *         <p>If an instance does not cleanly shut down within a few minutes, Amazon EC2 performs a
 *             hard reboot.</p>
 *         <p>For more information about troubleshooting, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-console.html">Getting console output and
 *             rebooting instances</a> in the <i>Amazon EC2 User Guide</i>.</p>
 */
export declare class RebootInstancesCommand extends $Command<RebootInstancesCommandInput, RebootInstancesCommandOutput, EC2ClientResolvedConfig> {
    readonly input: RebootInstancesCommandInput;
    constructor(input: RebootInstancesCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: EC2ClientResolvedConfig, options?: __HttpHandlerOptions): Handler<RebootInstancesCommandInput, RebootInstancesCommandOutput>;
    private serialize;
    private deserialize;
}
