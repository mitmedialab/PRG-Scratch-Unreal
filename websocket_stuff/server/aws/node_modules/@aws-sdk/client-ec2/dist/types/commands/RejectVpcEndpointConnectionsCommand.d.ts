import { EC2ClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../EC2Client";
import { RejectVpcEndpointConnectionsRequest, RejectVpcEndpointConnectionsResult } from "../models/models_4";
import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, MiddlewareStack, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer } from "@aws-sdk/types";
export interface RejectVpcEndpointConnectionsCommandInput extends RejectVpcEndpointConnectionsRequest {
}
export interface RejectVpcEndpointConnectionsCommandOutput extends RejectVpcEndpointConnectionsResult, __MetadataBearer {
}
/**
 * <p>Rejects one or more VPC endpoint connection requests to your VPC endpoint
 *             service.</p>
 */
export declare class RejectVpcEndpointConnectionsCommand extends $Command<RejectVpcEndpointConnectionsCommandInput, RejectVpcEndpointConnectionsCommandOutput, EC2ClientResolvedConfig> {
    readonly input: RejectVpcEndpointConnectionsCommandInput;
    constructor(input: RejectVpcEndpointConnectionsCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: EC2ClientResolvedConfig, options?: __HttpHandlerOptions): Handler<RejectVpcEndpointConnectionsCommandInput, RejectVpcEndpointConnectionsCommandOutput>;
    private serialize;
    private deserialize;
}
